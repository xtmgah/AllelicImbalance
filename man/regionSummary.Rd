% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/auxillary-methods.R
\docType{methods}
\name{regionSummary}
\alias{regionSummary}
\alias{regionSummary,ASEset-method}
\alias{regionSummary,numeric-method}
\title{regionSummary}
\usage{
regionSummary(x, ...)

\S4method{regionSummary}{ASEset}(x, region, strand = "*",
  threshold.pvalue = 0.05, return.class = "list", return.meta = TRUE,
  drop = TRUE, ...)
}
\arguments{
\item{x}{ASEset object}

\item{...}{arguments to forward to internal functions}

\item{region}{to summmarize over, the object can be a GRanges, GRangesList or
list containing a GRangesList in the root}

\item{strand}{can be "+", "-" or "*"}

\item{threshold.pvalue}{used in filter when to count AI as significant}

\item{return.class}{"array" or "list".}

\item{return.meta}{logical if to return a list with additional metadata}

\item{drop}{logical that for TRUE drops the third dimentsion if there is only
one element.}
}
\description{
Gives a summary of AI-consistency for a transcript
}
\details{
From a given set of e.g. transcripts exon ranges the function will return
a summary for the sum of all exons. Phase information, reference and alternative
allele is required.

A limitation comes to the strand-specificness. At the moment it is not possible
to call over more than one strand type using the strands in region. This will be
improved before going to release.
}
\examples{
data(ASEset)
a <- ASEset
# Add phase
set.seed(1)
p1 <- matrix(sample(c(1,0),replace=TRUE, size=nrow(a)*ncol(a)),nrow=nrow(a), ncol(a))
p2 <- matrix(sample(c(1,0),replace=TRUE, size=nrow(a)*ncol(a)),nrow=nrow(a), ncol(a))
p <- matrix(paste(p1,sample(c("|","|","/"), size=nrow(a)*ncol(a), replace=TRUE), p2, sep=""),
	nrow=nrow(a), ncol(a))

phase(a) <- p

#add alternative allele information
mcols(a)[["alt"]] <- inferAltAllele(a)

# in this example all snps in the ASEset defines the region
region <- granges(a)
t <- regionSummary(a, region)

# in this example two overlapping subsets of snps in the ASEset defines the region
region <- split(granges(a)[c(1,2,2,3)],c(1,1,2,2))
t <- regionSummary(a, region)

# use a multilevel list as input (output will keep the list dimensions)
region <- split(granges(a)[c(1,2,2,3)],c(1,1,2,2))
names(region) <- c("introns", "exons")
region <- list(g1=list(tx1=region, tx2=region), g2=list(tx1=region, tx2=region, tx3=region))
t <- regionSummary(a, region)
}
\author{
Jesper R. Gadin, Lasse Folkersen
}
\keyword{summary}

